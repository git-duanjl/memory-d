package com.irisking.police.remote.person;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.client.RestTemplate;

import com.alibaba.fastjson.JSON;
import com.irisking.police.util.OpenPlatfromServer;
import com.irisking.police.util.EnumRemote.EnumRemote;

@Service
public class PersonRemoteImpl implements PersonRemote{
	@Autowired
	private RestTemplate restTemplate;
	
	/**
	 * @创建人 : djl
	 * @创建时间 : 2018-01-11
	 * @描述 :  添加人员信息
	 * @参数 :  dataJson ： JSON格式的人员信息 |
	 * 				    token ：对应的token
	 * @返回 :  	Map<String, Object> 
	 * 					code : 100 ,  message 成功 , id personId | 
	 * 					code:  -100 , message 失败 
	 */
	public Map<String, Object> add(String dataJson, String token) {
		Map<String, Object> resultMap = new HashMap<String, Object>();
		
		/** DataJson validation. **/
		if(StringUtils.isBlank(dataJson)) {
			resultMap.put("code", EnumRemote.PARAM_ERROR.getCode());
			resultMap.put("message", EnumRemote.PARAM_ERROR.getMessage());
			return resultMap;
		}
		
		/** Token validation. **/
		if(StringUtils.isBlank(token)) {
			resultMap.put("code", EnumRemote.TOKEN_ERROR.getCode());
			resultMap.put("message", EnumRemote.TOKEN_ERROR.getMessage());
			return resultMap;
		}
		
		/** Token  add header. **/
		HttpHeaders requestHeaders = new HttpHeaders(); 
		requestHeaders.set("accessToken", token);
		requestHeaders.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
		
		/** Parameter add MultiValueMap.  **/
		MultiValueMap<String, Object> param = new LinkedMultiValueMap<String, Object>(0);
		param.add("dataJson", dataJson);
		
		/** Gets the url in the configuration file. **/
		String url = OpenPlatfromServer.PERSON_ADD;
		
		ResponseEntity<String> response = null;
		try {
			/** Add  HttpEntity  and send **/
			HttpEntity<MultiValueMap<String, Object>> entity = new HttpEntity<MultiValueMap<String, Object>>(param,requestHeaders);
			response = restTemplate.exchange(url, HttpMethod.POST, entity, String.class);
		} catch (Exception e) {
			e.printStackTrace();
			resultMap.put("code", EnumRemote.EXCEPTION.getCode());
			resultMap.put("message", EnumRemote.EXCEPTION.getMessage());
			return resultMap;
		}
		
		/** Rest return processing. **/
        String resultRest = response.getBody();
        @SuppressWarnings("unchecked")
		Map<String,Object> resultObject = JSON.parseObject(resultRest,Map.class); 
        if(105 != (int)resultObject.get("code")) {
        	resultMap.put("code", EnumRemote.REST_ERROR.getCode());
			resultMap.put("message", EnumRemote.REST_ERROR.getMessage());
			return resultMap;
        }
        
        resultMap.put("code", EnumRemote.SUCCESS.getCode());
		resultMap.put("message", EnumRemote.SUCCESS.getMessage());
		return resultMap;
	}
	
	
}



1515723821785
